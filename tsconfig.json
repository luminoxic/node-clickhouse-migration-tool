{
    "compilerOptions": {
      /* Language and Environment */
      "target": "es2019",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
  
      /* Modules */
      "module": "commonjs",                                /* Specify what module code is generated. */
      "moduleResolution": "node",                          /* Specify how TypeScript looks up a file from a given module specifier. */
  
      /* Emit */
      "declaration": false,                                 /* Generate .d.ts files from TypeScript and JavaScript files in your project. */
      "declarationMap": false,                              /* Create sourcemaps for d.ts files. */
      "sourceMap": true,                                   /* Create source map files for emitted JavaScript files. */
      "outDir": "./lib",                                   /* Specify an output folder for all emitted files. */
  
      /* Interop Constraints */
      "allowSyntheticDefaultImports": true,                /* Allow 'import x from y' when a module doesn't have a default export. */
      "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables `allowSyntheticDefaultImports` for type compatibility. */
      "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */
  
      /* Type Checking */
      "strict": false,                                     /* Enable all strict type-checking options. */
      "strictBindCallApply": true,                         /* Check that the arguments for `bind`, `call`, and `apply` methods match the original function. */
      "alwaysStrict": true,                                /* Ensure 'use strict' is always emitted. */
      "noUnusedLocals": true,                              /* Enable error reporting when a local variables aren't read. */
      "noUnusedParameters": true,                          /* Raise an error when a function parameter isn't read */
      "noImplicitReturns": true,                           /* Enable error reporting for codepaths that do not explicitly return in a function. */
      "noFallthroughCasesInSwitch": true,                  /* Enable error reporting for fallthrough cases in switch statements. */
  
      /* Completeness */
      "skipLibCheck": true,                                 /* Skip type checking all .d.ts files. */
      "resolveJsonModule": true                             /* Resolve json modules. */
    },
    "include": [
      "./src"
    ],
    "exclude": [
      "lib",
      "node_modules"
    ]
  }